# Enhanced Healthcare Facility Scraper with Local LLM Support
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

# Install system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    gnupg \
    ca-certificates \
    # Minimal Playwright dependencies
    libnss3 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libgtk-3-0 \
    libgbm1 \
    libasound2 \
    libgstreamer1.0-0 \
    libatomic1 \
    libxslt1.1 \
    libevent-2.1-7 \
    # For local LLM support
    build-essential \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements_llm.txt requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements_llm.txt

# Install Playwright browsers
RUN playwright install chromium
RUN playwright install-deps chromium

# Optional: Install Ollama for local LLM support
# Uncomment the following lines to include Ollama in the container
# RUN curl -fsSL https://ollama.ai/install.sh | sh
# ENV OLLAMA_HOST=0.0.0.0

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/output /app/input /app/logs

# Make scripts executable
RUN chmod +x main_enhanced.py main.py

# Create non-root user for security
RUN useradd -m -u 1000 scraper && chown -R scraper:scraper /app
USER scraper

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)"

# Default command - enhanced version with auto-detection
CMD ["python", "main_enhanced.py", "--url", "https://lcca.com", "--output", "/app/output", "--llm"]

